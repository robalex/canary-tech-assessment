// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProjectCanary.Data;

#nullable disable

namespace ProjectCanary.Data.Migrations
{
    [DbContext(typeof(ProjectCanaryDbContext))]
    [Migration("20250729005003_ChangeUniquenessConstraints")]
    partial class ChangeUniquenessConstraints
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProjectCanary.Data.Models.EmissionSite", b =>
                {
                    b.Property<int>("SiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("site_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SiteId"));

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision")
                        .HasColumnName("latitude");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision")
                        .HasColumnName("longitude");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.HasKey("SiteId")
                        .HasName("pk_emission_sites");

                    b.ToTable("emission_sites", (string)null);

                    b.HasData(
                        new
                        {
                            SiteId = 1,
                            Latitude = 39.914137859999997,
                            Longitude = -80.477836400000001,
                            Name = "Blackstone Pad"
                        },
                        new
                        {
                            SiteId = 2,
                            Latitude = 40.085348789999998,
                            Longitude = -80.646177829999999,
                            Name = "Cedar Ridge Pad"
                        },
                        new
                        {
                            SiteId = 3,
                            Latitude = 33.144574949999999,
                            Longitude = -97.440198260000003,
                            Name = "Eagle's Nest Pad"
                        },
                        new
                        {
                            SiteId = 4,
                            Latitude = 32.75879278,
                            Longitude = -97.264866789999999,
                            Name = "Pine Valley Pad"
                        },
                        new
                        {
                            SiteId = 5,
                            Latitude = 31.913915729999999,
                            Longitude = -93.291140889999994,
                            Name = "Red Rock Pad"
                        },
                        new
                        {
                            SiteId = 6,
                            Latitude = 31.777699139999999,
                            Longitude = -93.435971519999995,
                            Name = "Ironwood Pad"
                        });
                });

            modelBuilder.Entity("ProjectCanary.Data.Models.EquipmentGroup", b =>
                {
                    b.Property<int>("EquipmentGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("equipment_group_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EquipmentGroupId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.HasKey("EquipmentGroupId")
                        .HasName("pk_equipment_groups");

                    b.ToTable("equipment_groups", (string)null);

                    b.HasData(
                        new
                        {
                            EquipmentGroupId = 1,
                            Name = "Sand Traps"
                        },
                        new
                        {
                            EquipmentGroupId = 2,
                            Name = "Produced Water Tanks"
                        },
                        new
                        {
                            EquipmentGroupId = 3,
                            Name = "Wells"
                        },
                        new
                        {
                            EquipmentGroupId = 4,
                            Name = "Slop Tanks"
                        },
                        new
                        {
                            EquipmentGroupId = 5,
                            Name = "Slug Catchers"
                        },
                        new
                        {
                            EquipmentGroupId = 6,
                            Name = "GPUs"
                        },
                        new
                        {
                            EquipmentGroupId = 7,
                            Name = "Dehydrators"
                        },
                        new
                        {
                            EquipmentGroupId = 8,
                            Name = "Meter Runs"
                        },
                        new
                        {
                            EquipmentGroupId = 9,
                            Name = "Generators"
                        });
                });

            modelBuilder.Entity("ProjectCanary.Data.Models.EstimatedEmission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("EquipmentGroupId")
                        .HasColumnType("integer")
                        .HasColumnName("equipment_group_id");

                    b.Property<DateTime>("EstimateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("estimate_date");

                    b.Property<double>("MethaneInKg")
                        .HasColumnType("double precision")
                        .HasColumnName("methane_in_kg");

                    b.Property<int>("SiteId")
                        .HasColumnType("integer")
                        .HasColumnName("site_id");

                    b.HasKey("Id")
                        .HasName("pk_estimated_emissions");

                    b.HasIndex("EquipmentGroupId")
                        .HasDatabaseName("ix_estimated_emissions_equipment_group_id");

                    b.HasIndex("SiteId", "EquipmentGroupId", "EstimateDate")
                        .IsUnique()
                        .HasDatabaseName("ix_estimated_emissions_site_id_equipment_group_id_estimate_date");

                    b.ToTable("estimated_emissions", (string)null);
                });

            modelBuilder.Entity("ProjectCanary.Data.Models.MeasuredEmission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("EquipmentGroupId")
                        .HasColumnType("integer")
                        .HasColumnName("equipment_group_id");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("equipment_id");

                    b.Property<DateTime>("MeasurementDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("measurement_date");

                    b.Property<double>("MethaneInKg")
                        .HasColumnType("double precision")
                        .HasColumnName("methane_in_kg");

                    b.Property<int>("SiteId")
                        .HasColumnType("integer")
                        .HasColumnName("site_id");

                    b.HasKey("Id")
                        .HasName("pk_measured_emissions");

                    b.HasIndex("EquipmentGroupId")
                        .HasDatabaseName("ix_measured_emissions_equipment_group_id");

                    b.HasIndex("SiteId")
                        .HasDatabaseName("ix_measured_emissions_site_id");

                    b.HasIndex("EquipmentId", "MeasurementDate")
                        .IsUnique()
                        .HasDatabaseName("ix_measured_emissions_equipment_id_measurement_date");

                    b.ToTable("measured_emissions", (string)null);
                });

            modelBuilder.Entity("ProjectCanary.Data.Models.EstimatedEmission", b =>
                {
                    b.HasOne("ProjectCanary.Data.Models.EquipmentGroup", "EquipmentGroup")
                        .WithMany()
                        .HasForeignKey("EquipmentGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_estimated_emissions_equipment_groups_equipment_group_id");

                    b.HasOne("ProjectCanary.Data.Models.EmissionSite", "EmissionSite")
                        .WithMany()
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_estimated_emissions_emission_sites_site_id");

                    b.Navigation("EmissionSite");

                    b.Navigation("EquipmentGroup");
                });

            modelBuilder.Entity("ProjectCanary.Data.Models.MeasuredEmission", b =>
                {
                    b.HasOne("ProjectCanary.Data.Models.EquipmentGroup", "EquipmentGroup")
                        .WithMany()
                        .HasForeignKey("EquipmentGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_measured_emissions_equipment_groups_equipment_group_id");

                    b.HasOne("ProjectCanary.Data.Models.EmissionSite", "EmissionSite")
                        .WithMany()
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_measured_emissions_emission_sites_site_id");

                    b.Navigation("EmissionSite");

                    b.Navigation("EquipmentGroup");
                });
#pragma warning restore 612, 618
        }
    }
}
