// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProjectCanary.Data;

#nullable disable

namespace ProjectCanary.Data.Migrations
{
    [DbContext(typeof(ProjectCanaryDbContext))]
    [Migration("20250726194139_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProjectCanary.Data.Model.EmissionSite", b =>
                {
                    b.Property<int>("SiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("site_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SiteId"));

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision")
                        .HasColumnName("latitude");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision")
                        .HasColumnName("longitude");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.HasKey("SiteId")
                        .HasName("pk_emission_sites");

                    b.ToTable("emission_sites", (string)null);
                });

            modelBuilder.Entity("ProjectCanary.Data.Model.Equipment", b =>
                {
                    b.Property<int>("EquipmentGroupId")
                        .HasColumnType("integer")
                        .HasColumnName("equipment_group_id");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("equipment_id");

                    b.HasKey("EquipmentGroupId", "EquipmentId")
                        .HasName("pk_equipment");

                    b.ToTable("equipment", (string)null);
                });

            modelBuilder.Entity("ProjectCanary.Data.Model.EquipmentGroup", b =>
                {
                    b.Property<int>("EquipmentGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("equipment_group_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EquipmentGroupId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.HasKey("EquipmentGroupId")
                        .HasName("pk_equipment_groups");

                    b.ToTable("equipment_groups", (string)null);
                });

            modelBuilder.Entity("ProjectCanary.Data.Model.EstimatedEmission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("EquipmentGroupId")
                        .HasColumnType("integer")
                        .HasColumnName("equipment_group_id");

                    b.Property<DateTime>("EstimateEndTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("estimate_end_time");

                    b.Property<DateTime>("EstimateStartTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("estimate_start_time");

                    b.Property<double>("MethaneInKg")
                        .HasColumnType("double precision")
                        .HasColumnName("methane_in_kg");

                    b.Property<int>("SiteId")
                        .HasColumnType("integer")
                        .HasColumnName("site_id");

                    b.HasKey("Id")
                        .HasName("pk_estimated_emissions");

                    b.HasIndex("EquipmentGroupId")
                        .HasDatabaseName("ix_estimated_emissions_equipment_group_id");

                    b.HasIndex("SiteId")
                        .HasDatabaseName("ix_estimated_emissions_site_id");

                    b.ToTable("estimated_emissions", (string)null);
                });

            modelBuilder.Entity("ProjectCanary.Data.Model.MeasuredEmission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("EquipmentGroupId")
                        .HasColumnType("integer")
                        .HasColumnName("equipment_group_id");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("equipment_id");

                    b.Property<DateTime>("MeasurementEndTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("measurement_end_time");

                    b.Property<DateTime>("MeasurementStartTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("measurement_start_time");

                    b.Property<double>("MethaneInKg")
                        .HasColumnType("double precision")
                        .HasColumnName("methane_in_kg");

                    b.Property<int>("SiteId")
                        .HasColumnType("integer")
                        .HasColumnName("site_id");

                    b.HasKey("Id")
                        .HasName("pk_measured_emissions");

                    b.HasIndex("EquipmentGroupId")
                        .HasDatabaseName("ix_measured_emissions_equipment_group_id");

                    b.HasIndex("SiteId")
                        .HasDatabaseName("ix_measured_emissions_site_id");

                    b.ToTable("measured_emissions", (string)null);
                });

            modelBuilder.Entity("ProjectCanary.Data.Model.Equipment", b =>
                {
                    b.HasOne("ProjectCanary.Data.Model.EquipmentGroup", "EquipmentGroup")
                        .WithMany()
                        .HasForeignKey("EquipmentGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_equipment_equipment_groups_equipment_group_id");

                    b.Navigation("EquipmentGroup");
                });

            modelBuilder.Entity("ProjectCanary.Data.Model.EstimatedEmission", b =>
                {
                    b.HasOne("ProjectCanary.Data.Model.EquipmentGroup", "EquipmentGroup")
                        .WithMany()
                        .HasForeignKey("EquipmentGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_estimated_emissions_equipment_groups_equipment_group_id");

                    b.HasOne("ProjectCanary.Data.Model.EmissionSite", "EmissionSite")
                        .WithMany()
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_estimated_emissions_emission_sites_site_id");

                    b.Navigation("EmissionSite");

                    b.Navigation("EquipmentGroup");
                });

            modelBuilder.Entity("ProjectCanary.Data.Model.MeasuredEmission", b =>
                {
                    b.HasOne("ProjectCanary.Data.Model.EquipmentGroup", "EquipmentGroup")
                        .WithMany()
                        .HasForeignKey("EquipmentGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_measured_emissions_equipment_groups_equipment_group_id");

                    b.HasOne("ProjectCanary.Data.Model.EmissionSite", "EmissionSite")
                        .WithMany()
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_measured_emissions_emission_sites_site_id");

                    b.Navigation("EmissionSite");

                    b.Navigation("EquipmentGroup");
                });
#pragma warning restore 612, 618
        }
    }
}
